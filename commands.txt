#example
kubectl run hello-minikube --image=gcr.io/google_containers/echoserver:1.4 --port=8080
kubectl expose deployment hello-minikube  --type=NodePort
kubectl get pod
curl $(minikube service hello-minikube --url)
kubectl delete deployment hello-minikube


#deployment
kubectl apply -f ./deployment.yaml
kubectl expose deployment tomcat-deployment --type=NodePort
minikube service tomcat-deployment --url
curl <URL>


#expose / access
kubectl get pods
kubectl get pods [pod name]
 
kubectl expose <type name> <identifier/name> [—port=external port] [—target-port=container-port [—type=service-type]
kubectl expose deployment tomcat-deployment --type=NodePort
 
kubectl port-forward <pod name> [LOCAL_PORT:]REMOTE_PORT]
 
kubectl attach <pod name> -c <container>
 
kubectl exec  [-it] <pod name> [-c CONTAINER] — COMMAND [args…]
kubectl exec -it <pod name> bash
 
kubectl label [—overwrite] <type> KEY_1=VAL_1 ….
kubectl label pods <pod name> healthy=fasle
 
kubectl run <name> —image=image
kubectl run hazelcast --image=hazelcast/hazelcast --port=5701
# the hazelcast docker image has been moved to hazelcast/hazelcast (https://hub.docker.com/r/hazelcast/hazelcast)
 
kubectl describe pod


#scale
kubectl scale --replicas=4 deployment/tomcat-deployment 
 
kubectl expose deployment tomcat-deployment --type=NodePort
kubectl expose deployment tomcat-deployment --type=LoadBalancer --port=8080 --target-port=8080 --name tomcat-load-balancer
 
kubectl describe services tomcat-load-balancer

#Deployments Commands
kubectl get deployments
kubectl rollout status
kubectl set image
kubectl rollout history


#Web interface
kubectl proxy
kubectl create -f https://raw.githubusercontent.com/kubernetes/dashboard/master/src/deploy/recommended/kubernetes-dashboard.yaml

#DNS & Service Discovery
Extended reading regarding the syntax of the deployment files and kubectl commands


If you are new to YAML file,  read Introduction to YAML: Creating a Kubernetes deployment (https://www.mirantis.com/blog/introduction-to-yaml-creating-a-kubernetes-deployment/)

'---' is used for separating documents. It allows us to place multiple things in a single file - e.g. services, deployments, etc. We could have made separate documents. One for service, one for deployment, but the '---' allows us placing them in a single file.

What is apiVersion and which Kubernetes apiVersion Should I Use? (https://matthewpalmer.net/kubernetes-app-developer/articles/kubernetes-apiversion-definition-guide.html)

Difference between kubectl create and kubectl apply : kubectl create can be used only for creating new deployments; kubectl apply can be used for both creating and updating deployments. Other than that they're pretty much identical.